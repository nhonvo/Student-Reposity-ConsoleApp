// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exercise_2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230408080139_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Exercise_2.DAl.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Wallet")
                        .IsConcurrencyToken()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Name1",
                            Phone = "012345678",
                            Wallet = 500
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "name2",
                            Phone = "012345678",
                            Wallet = 500
                        },
                        new
                        {
                            Id = 3,
                            IsActive = false,
                            Name = "name3",
                            Phone = "012345678",
                            Wallet = 500
                        });
                });

            modelBuilder.Entity("Exercise_2.DAl.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Detail")
                        .HasColumnType("int");

                    b.Property<int>("ShippingCompanyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ShippingCompanyId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            Detail = 0,
                            ShippingCompanyId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            Detail = 0,
                            ShippingCompanyId = 4
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            Detail = 0,
                            ShippingCompanyId = 1
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 1,
                            Detail = 0,
                            ShippingCompanyId = 2
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 1,
                            Detail = 0,
                            ShippingCompanyId = 3
                        });
                });

            modelBuilder.Entity("Exercise_2.DAl.Models.OrderDetails", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            OrderId = 5,
                            ProductId = 2
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 4
                        },
                        new
                        {
                            OrderId = 4,
                            ProductId = 4
                        });
                });

            modelBuilder.Entity("Exercise_2.DAl.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Product 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Product 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Product 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Product 4"
                        });
                });

            modelBuilder.Entity("Exercise_2.DAl.Models.ShippingCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShippingCompanies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Company 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Company 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Company 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Company 4"
                        });
                });

            modelBuilder.Entity("Exercise_2.DAl.Models.Order", b =>
                {
                    b.HasOne("Exercise_2.DAl.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exercise_2.DAl.Models.ShippingCompany", "ShippingCompany")
                        .WithMany("Orders")
                        .HasForeignKey("ShippingCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("ShippingCompany");
                });

            modelBuilder.Entity("Exercise_2.DAl.Models.OrderDetails", b =>
                {
                    b.HasOne("Exercise_2.DAl.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exercise_2.DAl.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Exercise_2.DAl.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Exercise_2.DAl.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Exercise_2.DAl.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Exercise_2.DAl.Models.ShippingCompany", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
